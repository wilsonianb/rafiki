openapi: 3.1.0
info:
  title: Open Payments
  version: '1.0'
  license:
    name: Apache 2.0
    identifier: Apache-2.0
  description: |-
    The Open Payments API is a simple REST API with 5 resource types: **payment pointer**, **quote**, **connection**, **incoming payment** and **outgoing payment**.

    The *service endpoint* for the API is always the URL of the payment pointer resource and all other resources (except connections) are sub-resources of the payment pointer.

    An incoming payment defines meta data that is automatically attached to payments made into the payment pointer under that incoming payment. This facilitates automation of processes like reconciliation of payment into the payment pointer with external systems.

    An outgoing payment is an instruction to make a payment out of the payment pointer.

    A quote is a commitment from the account provider to deliver a particular amount to a receiver when sending a particular amount from the payment pointer. It is only valid for a limited time.

    For privacy reasons a connection resource is not a sub-resource of a payment pointer.

    All resource and collection resource representations use JSON and the media-type `application/json`.  

    The `payment pointer` resource has three collections of sub-resources:
    1. `/incoming-payments` contains the **incoming payment** sub-resources  
    2. `/outgoing-payments` contains the **outgoing payment** sub-resources  
    3. `/quotes` contains the **quote** sub-resources

    There is no normative path for **connection** resources. In this documentation we use the path `/connections` but implementations may use any arbitrary path.

    Access to resources and permission to execute the methods exposed by the API is determined by the grants given to the client represented by an access token used in API requests.
  summary: An API for open access to financial accounts to send and receive payments.
  contact:
    email: tech@interledger.org
servers:
  - url: '{paymentPointer}'
    description: 'Server for when Payment Pointer has a pathname  (ie https://openpayments.guide/alice)'
    variables:
      paymentPointer:
        default: openpayments.guide/alice
  - url: '{paymentPointer}/.well-known/pay'
    description: 'Server for when Payment Pointer has no pathname (ie https://openpayments.guide)'
    variables:
      paymentPointer:
        default: openpayments.guide
tags:
  - name: payment-pointer
    description: payment pointer operations
  - name: incoming-payment
    description: incoming payment operations
  - name: outgoing-payment
    description: outgoing payment operations
  - name: quote
    description: quote operations
  - name: stream-connection
    description: interledger STREAM connections
paths:
  /:
    get:
      summary: Get a Payment Pointer
      tags:
        - payment-pointer
      responses:
        '200':
          description: Payment Pointer Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/payment-pointer'
              examples:
                Get payment pointer for $openpayments.guide/alice:
                  value:
                    id: 'https://openpayments.guide/alice'
                    publicName: Alice
                    assetCode: USD
                    assetScale: 2
                    authServer: 'https://openpayments.guide/auth'
        '404':
          description: Payment Pointer Not Found
      operationId: get-payment-pointer
      description: |-
        Retrieve the public information of the Payment Pointer.

        This end-point should be open to anonymous requests as it allows clients to verify a Payment Pointer URL and get the basic information required to construct new transactions and discover the grant request URL.

        The content should be slow changing and cacheable for long periods. Servers SHOULD use cache control headers.
      security: []
      x-internal: false
  /jwks.json:
    get:
      summary: Get the keys bound to a Payment Pointer
      tags:
        - payment-pointer
      responses:
        '200':
          description: JWKS Document Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/json-web-key-set'
              examples: {}
        '404':
          description: JWKS Document Not Found
      operationId: get-payment-pointer-keys
      description: Retrieve the public keys of the Payment Pointer.
      security: []
  '/connections/{id}':
    servers:
      - url: 'https://openpayments.guide'
    get:
      summary: Get ILP STREAM credentials for a connection
      tags:
        - stream-connection
      responses:
        '200':
          description: Connection Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ilp-stream-connection'
              examples:
                Get connection:
                  value:
                    id: 'https://openpayments.guide/connections/016da9d5-c9a4-4c80-a354-86b915a04ff8'
                    ilpAddress: g.ilp.iwuyge987y.98y0f34tsrt8y
                    sharedSecret: 1c7eaXa4rd2fFOBl1iydvCT1tV5TbM3RW1WLCafu_JA
                    assetCode: USD
                    assetScale: 2
        '404':
          description: Connection Not Found
      operationId: get-ilp-stream-connection
      description: |-
        *NB* Use server url specific to this path.

        Fetch new connection credentials for an ILP STREAM connection.

        A connection is an ephemeral resource that is created to accommodate new incoming payments.

        A new set of credential will be generated each time this API is called.
      security: []
    parameters:
      - $ref: '#/components/parameters/id'
  /incoming-payments:
    post:
      summary: Create an Incoming Payment
      tags:
        - incoming-payment
      operationId: create-incoming-payment
      responses:
        '201':
          description: Incoming Payment Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/incoming-payment-with-connection'
              examples:
                New Incoming Payment for $25:
                  value:
                    id: 'https://openpayments.guide/alice/incoming-payments/08394f02-7b7b-45e2-b645-51d04e7c330c'
                    paymentPointer: 'https://openpayments.guide/alice/'
                    incomingAmount:
                      value: '2500'
                      assetCode: USD
                      assetScale: 2
                    receivedAmount:
                      value: '0'
                      assetCode: USD
                      assetScale: 2
                    completed: false
                    expiresAt: '2022-02-03T23:20:50.52Z'
                    externalRef: INV2022-02-0137
                    ilpStreamConnection:
                      id: 'https://openpayments.guide/connections/ff394f02-7b7b-45e2-b645-51d04e7c345c'
                      ilpAddress: g.ilp.iwuyge987y.98y08y
                      sharedSecret: 1c7eaXa4rd2fFOBl1iydvCT1tV5TbM3RW1WLCafu_JA
                      assetCode: USD
                      assetScale: 2
                    createdAt: '2022-03-12T23:20:50.52Z'
                    updatedAt: '2022-04-01T10:24:36.11Z'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                incomingAmount:
                  description: The maximum amount that should be paid into the payment pointer under this incoming payment.
                  $ref: ./schemas.yaml#/components/schemas/amount
                expiresAt:
                  type: string
                  description: The date and time when payments into the incoming payment must no longer be accepted.
                  format: date-time
                  writeOnly: true
                description:
                  type: string
                  description: Human readable description of the incoming payment that will be visible to the account holder.
                externalRef:
                  type: string
                  description: A reference that can be used by external systems to reconcile this payment with their systems. E.g. An invoice number. (Optional)
              additionalProperties: false
            examples:
              Create incoming payment for $25 to pay invoice INV2022-02-0137:
                value:
                  incomingAmount:
                    value: '2500'
                    assetCode: USD
                    assetScale: 2
                  externalRef: INV2022-02-0137
        description: |-
          A subset of the incoming payments schema is accepted as input to create a new incoming payment.

          The `incomingAmount` must use the same `assetCode` and `assetScale` as the payment pointer.
        required: true
      description: |-
        A client MUST create an **incoming payment** resource before it is possible to send any payments to the payment pointer.

        All of the input parameters are _optional_.
      parameters:
        - $ref: '#/components/parameters/signature-input'
        - $ref: '#/components/parameters/signature'
    get:
      summary: List Incoming Payments
      operationId: list-incoming-payments
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  pagination:
                    $ref: '#/components/schemas/page-info'
                  result:
                    type: array
                    items:
                      $ref: '#/components/schemas/incoming-payment-with-connection-url'
              examples:
                forward pagination:
                  value:
                    pagination:
                      startCursor: 241de237-f989-42be-926d-c0c1fca57708
                      endCursor: 315581f8-9967-45a0-9cd3-87b60b6d6414
                      hasPreviousPage: false
                      hasNextPage: true
                    result:
                      - id: 'https://openpayments.guide/alice/incoming-payments/016da9d5-c9a4-4c80-a354-86b915a04ff8'
                        paymentPointer: 'https://openpayments.guide/alice/'
                        incomingAmount:
                          value: '250'
                          assetCode: USD
                          assetScale: 2
                        receivedAmount:
                          value: '250'
                          assetCode: USD
                          assetScale: 2
                        ilpStreamConnection: 'https://openpayments.guide/connections/376df9d5-c9a4-4c80-a354-86b915a04ff8'
                        expiresAt: '2022-04-12T23:20:50.52Z'
                        createdAt: '2022-03-12T23:20:50.52Z'
                        updatedAt: '2022-04-01T10:24:36.11Z'
                        description: 'Hi Mo, this is for the cappuccino I bought for you the other day.'
                        externalRef: Coffee w/ Mo on 10 March 22
                        completed: true
                      - id: 'https://openpayments.guide/alice/incoming-payments/32abc219-3dc3-44ec-a225-790cacfca8fa'
                        paymentPointer: 'https://openpayments.guide/alice/'
                        receivedAmount:
                          value: '100'
                          assetCode: USD
                          assetScale: 2
                        ilpStreamConnection: 'https://openpayments.guide/connections/1f6df9d5-c9a4-4c80-a354-86b915a04ff8'
                        expiresAt: '2022-04-12T23:20:50.52Z'
                        createdAt: '2022-03-12T23:20:50.52Z'
                        updatedAt: '2022-04-01T10:24:36.11Z'
                        description: 'I love your website, Alice! Thanks for the great content'
                        completed: false
                backward pagination:
                  value:
                    pagination:
                      startCursor: 241de237-f989-42be-926d-c0c1fca57708
                      endCursor: 315581f8-9967-45a0-9cd3-87b60b6d6414
                      hasPreviousPage: true
                      hasNextPage: false
                    result:
                      - id: 'https://openpayments.guide/alice/incoming-payments/32abc219-3dc3-44ec-a225-790cacfca8fa'
                        paymentPointer: 'https://openpayments.guide/alice/'
                        receivedAmount:
                          value: '100'
                          assetCode: USD
                          assetScale: 2
                        completed: true
                        ilpStreamConnection: 'https://openpayments.guide/connections/1f6df9d5-c9a4-4c80-a354-86b915a04ff8'
                        expiresAt: '2022-04-12T23:20:50.52Z'
                        createdAt: '2022-03-12T23:20:50.52Z'
                        updatedAt: '2022-04-01T10:24:36.11Z'
                        description: 'I love your website, Alice! Thanks for the great content'
                      - id: 'https://openpayments.guide/alice/incoming-payments/016da9d5-c9a4-4c80-a354-86b915a04ff8'
                        paymentPointer: 'https://openpayments.guide/alice/'
                        incomingAmount:
                          value: '250'
                          assetCode: USD
                          assetScale: 2
                        receivedAmount:
                          value: '250'
                          assetCode: USD
                          assetScale: 2
                        completed: true
                        ilpStreamConnection: 'https://openpayments.guide/connections/376df9d5-c9a4-4c80-a354-86b915a04ff8'
                        expiresAt: '2022-04-12T23:20:50.52Z'
                        createdAt: '2022-03-12T23:20:50.52Z'
                        updatedAt: '2022-04-01T10:24:36.11Z'
                        description: 'Hi Mo, this is for the cappuccino I bought for you the other day.'
                        externalRef: Coffee w/ Mo on 10 March 22
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
      description: List all incoming payments on the payment pointer
      parameters:
        - $ref: '#/components/parameters/cursor'
        - $ref: '#/components/parameters/first'
        - $ref: '#/components/parameters/last'
        - $ref: '#/components/parameters/signature-input'
        - $ref: '#/components/parameters/signature'
      tags:
        - incoming-payment
  /outgoing-payments:
    post:
      summary: Create an Outgoing Payment
      tags:
        - outgoing-payment
      operationId: create-outgoing-payment
      responses:
        '201':
          description: Outgoing Payment Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/outgoing-payment'
              examples:
                New Fixed Send Outgoing Payment for $25:
                  value:
                    id: 'https://openpayments.guide/alice/outgoing-payments/8c68d3cc-0a0f-4216-98b4-4fa44a6c88cf'
                    paymentPointer: 'https://openpayments.guide/alice/'
                    failed: false
                    receiver: 'https://openpayments.guide/bob/incoming-payments/48884225-b393-4872-90de-1b737e2491c2'
                    sendAmount:
                      value: '2500'
                      assetCode: USD
                      assetScale: 2
                    receiveAmount:
                      value: '2500'
                      assetCode: USD
                      assetScale: 2
                    sentAmount:
                      value: '0'
                      assetCode: USD
                      assetScale: 2
                    description: Thank you for the shoes.
                    createdAt: '2022-03-12T23:20:50.52Z'
                    updatedAt: '2022-04-01T10:24:36.11Z'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
      requestBody:
        content:
          application/json:
            examples:
              Create an outgoing payment based on a quote:
                value:
                  quoteId: 'https://openpayments.guide/alice/quotes/ab03296b-0c8b-4776-b94e-7ee27d868d4d'
                  externalRef: INV2022-02-0137
            schema:
              type: object
              properties:
                quoteId:
                  type: string
                  format: uri
                  description: The URL of the quote defining this payment's amounts.
                description:
                  type: string
                  description: Human readable description of the outgoing payment that will be visible to the account holder and shared with the receiver.
                externalRef:
                  type: string
                  description: A reference that can be used by external systems to reconcile this payment with their systems. E.g. An invoice number. (Optional)
              required:
                - quoteId
              additionalProperties: false
        description: |-
          A subset of the outgoing payments schema is accepted as input to create a new outgoing payment.

          The `sendAmount` must use the same `assetCode` and `assetScale` as the payment pointer.
        required: true
      description: An **outgoing payment** is a sub-resource of a payment pointer. It represents a payment from the payment pointer.
      parameters:
        - $ref: '#/components/parameters/signature-input'
        - $ref: '#/components/parameters/signature'
    description: Create a new outgoing payment at the payment pointer.
    get:
      summary: List Outgoing Payments
      operationId: list-outgoing-payments
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  pagination:
                    $ref: '#/components/schemas/page-info'
                  result:
                    type: array
                    items:
                      $ref: '#/components/schemas/outgoing-payment'
              examples:
                forward pagination:
                  value:
                    pagination:
                      startCursor: 241de237-f989-42be-926d-c0c1fca57708
                      endCursor: 315581f8-9967-45a0-9cd3-87b60b6d6414
                      hasPreviousPage: false
                      hasNextPage: true
                    result:
                      - id: 'https://openpayments.guide/alice/outgoing-payments/8c68d3cc-0a0f-4216-98b4-4fa44a6c88cf'
                        paymentPointer: 'https://openpayments.guide/alice/'
                        failed: false
                        receiver: 'https://openpayments.guide/aplusvideo/incoming-payments/45d495ad-b763-4882-88d7-aa14d261686e'
                        receiveAmount:
                          value: '2500'
                          assetCode: USD
                          assetScale: 2
                        sendAmount:
                          value: '2500'
                          assetCode: USD
                          assetScale: 2
                        sentAmount:
                          value: '2500'
                          assetCode: USD
                          assetScale: 2
                        createdAt: '2022-03-12T23:20:50.52Z'
                        updatedAt: '2022-04-01T10:24:36.11Z'
                        description: APlusVideo subscription
                        externalRef: 'customer: 847458475'
                      - id: 'https://openpayments.guide/alice/outgoing-payments/0cffa5a4-58fd-4cc8-8e01-7145c72bf07c'
                        paymentPointer: 'https://openpayments.guide/alice/'
                        failed: false
                        receiver: 'https://openpayments.guide/shoeshop/incoming-payments/2fe92c6f-ef0d-487c-8759-3784eae6bce9'
                        sendAmount:
                          value: '7026'
                          assetCode: USD
                          assetScale: 2
                        receiveAmount:
                          value: '7026'
                          assetCode: USD
                          assetScale: 2
                        sentAmount:
                          value: '7026'
                          assetCode: USD
                          assetScale: 2
                        createdAt: '2022-03-12T23:20:50.52Z'
                        updatedAt: '2022-04-01T10:24:36.11Z'
                        description: Thank you for your purchase at ShoeShop!
                        externalRef: INV2022-8943756
                backward pagination:
                  value:
                    pagination:
                      startCursor: 241de237-f989-42be-926d-c0c1fca57708
                      endCursor: 315581f8-9967-45a0-9cd3-87b60b6d6414
                      hasPreviousPage: true
                      hasNextPage: false
                    result:
                      - id: 'https://openpayments.guide/alice/outgoing-payments/0cffa5a4-58fd-4cc8-8e01-7145c72bf07c'
                        paymentPointer: 'https://openpayments.guide/alice/'
                        failed: false
                        receiver: 'https://openpayments.guide/shoeshop/incoming-payments/2fe92c6f-ef0d-487c-8759-3784eae6bce9'
                        sendAmount:
                          value: '7026'
                          assetCode: USD
                          assetScale: 2
                        receiveAmount:
                          value: '7026'
                          assetCode: USD
                          assetScale: 2
                        sentAmount:
                          value: '7026'
                          assetCode: USD
                          assetScale: 2
                        createdAt: '2022-03-12T23:20:50.52Z'
                        updatedAt: '2022-04-01T10:24:36.11Z'
                        description: Thank you for your purchase at ShoeShop!
                        externalRef: INV2022-8943756
                      - id: 'https://openpayments.guide/alice/outgoing-payments/8c68d3cc-0a0f-4216-98b4-4fa44a6c88cf'
                        paymentPointer: 'https://openpayments.guide/alice/'
                        failed: false
                        receiver: 'https://openpayments.guide/aplusvideo/incoming-payments/45d495ad-b763-4882-88d7-aa14d261686e'
                        receiveAmount:
                          value: '2500'
                          assetCode: USD
                          assetScale: 2
                        sendAmount:
                          value: '2500'
                          assetCode: USD
                          assetScale: 2
                        sentAmount:
                          value: '2500'
                          assetCode: USD
                          assetScale: 2
                        createdAt: '2022-03-12T23:20:50.52Z'
                        updatedAt: '2022-04-01T10:24:36.11Z'
                        description: APlusVideo subscription
                        externalRef: 'customer: 847458475'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
      description: List all outgoing payments on the payment pointer
      parameters:
        - $ref: '#/components/parameters/cursor'
        - $ref: '#/components/parameters/first'
        - $ref: '#/components/parameters/last'
        - $ref: '#/components/parameters/signature-input'
        - $ref: '#/components/parameters/signature'
      tags:
        - outgoing-payment
  /quotes:
    post:
      summary: Create a Quote
      tags:
        - quote
      operationId: create-quote
      responses:
        '201':
          description: Quote Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/quote'
              examples:
                New Fixed Send Quote for $25:
                  value:
                    id: 'https://openpayments.guide/alice/quotes/8c68d3cc-0a0f-4216-98b4-4fa44a6c88cf'
                    paymentPointer: 'https://openpayments.guide/alice/'
                    receiver: 'https://openpayments.guide/aplusvideo/incoming-payments/45d495ad-b763-4882-88d7-aa14d261686e'
                    sendAmount:
                      value: '2500'
                      assetCode: USD
                      assetScale: 2
                    receiveAmount:
                      value: '2198'
                      assetCode: EUR
                      assetScale: 2
                    createdAt: '2022-03-12T23:20:50.52Z'
                    expiresAt: '2022-04-12T23:20:50.52Z'
        '400':
          description: No amount was provided and no amount could be inferred from the receiver.
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
      requestBody:
        content:
          application/json:
            examples:
              Create fixed-send-amount quote for $25 to an ILP STREAM connection:
                value:
                  receiver: 'https://openpayments.guide/connections/45a0d0ee-26dc-4c66-89e0-01fbf93156f7'
                  sendAmount:
                    value: '2500'
                    assetCode: USD
                    assetScale: 2
              Create fixed-receive-amount quote for $25:
                value:
                  receiver: 'https://openpayments.guide/alice/incoming-payments/37a0d0ee-26dc-4c66-89e0-01fbf93156f7'
                  receiveAmount:
                    value: '2500'
                    assetCode: USD
                    assetScale: 2
            schema:
              oneOf:
                - description: Create quote for an `receiver` that is an Incoming Payment with an `incomingAmount`
                  properties:
                    receiver:
                      $ref: ./schemas.yaml#/components/schemas/receiver
                  required:
                    - receiver
                  additionalProperties: false
                - description: Create a quote with a fixed-receive amount
                  properties:
                    receiver:
                      $ref: ./schemas.yaml#/components/schemas/receiver
                    receiveAmount:
                      description: The fixed amount that would be paid into the receiving payment pointer given a successful outgoing payment.
                      $ref: ./schemas.yaml#/components/schemas/amount
                  required:
                    - receiver
                    - receiveAmount
                  additionalProperties: false
                - description: Create a quote with a fixed send amount
                  properties:
                    receiver:
                      $ref: ./schemas.yaml#/components/schemas/receiver
                    sendAmount:
                      description: The fixed amount that would be sent from the sending payment pointer given a successful outgoing payment.
                      $ref: ./schemas.yaml#/components/schemas/amount
                  required:
                    - receiver
                    - sendAmount
                  additionalProperties: false

        description: |-
          A subset of the quotes schema is accepted as input to create a new quote.

          The quote must be created with a (`sendAmount` xor `receiveAmount`) unless the `receiver` is an Incoming Payment which has an `incomingAmount`.
        required: true
      description: A **quote** is a sub-resource of a payment pointer. It represents a quote for a payment from the payment pointer.
      parameters:
        - $ref: '#/components/parameters/signature-input'
        - $ref: '#/components/parameters/signature'
    description: Create a new quote at the payment pointer.
  '/incoming-payments/{id}':
    get:
      summary: Get an Incoming Payment
      tags:
        - incoming-payment
      operationId: get-incoming-payment
      responses:
        '200':
          description: Incoming Payment Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/incoming-payment-with-connection'
              examples:
                Incoming Payment for $25 with $12.34 received so far:
                  value:
                    id: 'https://openpayments.guide/alice/incoming-payments/2f1b0150-db73-49e8-8713-628baa4a17ff'
                    paymentPointer: 'https://openpayments.guide/alice/'
                    incomingAmount:
                      value: '2500'
                      assetCode: USD
                      assetScale: 2
                    receivedAmount:
                      value: '1234'
                      assetCode: USD
                      assetScale: 2
                    completed: false
                    expiresAt: '2022-04-12T23:20:50.52Z'
                    createdAt: '2022-03-12T23:20:50.52Z'
                    updatedAt: '2022-04-01T10:24:36.11Z'
                    description: Thanks for the flowers!
                    externalRef: INV-12876
                    ilpStreamConnection:
                      id: 'https://openpayments.guide/connections/4a1b0150-db73-49e8-8713-628baa4a17ff'
                      ilpAddress: g.ilp.iwuyge987y.98y08y
                      sharedSecret: 1c7eaXa4rd2fFOBl1iydvCT1tV5TbM3RW1WLCafu_JA
                      assetCode: USD
                      assetScale: 2
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          description: Incoming Payment Not Found
      description: A client can fetch the latest state of an incoming payment to determine the amount received into the payment pointer.
      parameters:
        - $ref: '#/components/parameters/signature-input'
        - $ref: '#/components/parameters/signature'
    parameters:
      - $ref: '#/components/parameters/id'
  '/incoming-payments/{id}/complete':
    post:
      summary: Complete an Incoming Payment
      tags:
        - incoming-payment
      operationId: complete-incoming-payment
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/incoming-payment'
                additionalProperties: false
              examples:
                Completed Incoming Payment:
                  value:
                    id: 'https://openpayments.guide/alice/incoming-payments/016da9d5-c9a4-4c80-a354-86b915a04ff8'
                    paymentPointer: 'https://openpayments.guide/alice/'
                    incomingAmount:
                      value: '250'
                      assetCode: USD
                      assetScale: 2
                    receivedAmount:
                      value: '250'
                      assetCode: USD
                      assetScale: 2
                    completed: true
                    expiresAt: '2022-04-12T23:20:50.52Z'
                    createdAt: '2022-03-12T23:20:50.52Z'
                    updatedAt: '2022-04-01T10:24:36.11Z'
                    description: 'Hi Mo, this is for the cappuccino I bought for you the other day.'
                    externalRef: Coffee w/ Mo on 10 March 22
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          description: Incoming Payment Not Found
      description: |-
        A client with the appropriate permissions MAY mark a non-expired **incoming payment** as `completed` if it has not yet received `incomingAmount`.

        This indicates to the receiving account provider that it can begin any post processing of the payment such as generating account statements or notifying the account holder of the completed payment.
      parameters:
        - $ref: '#/components/parameters/signature-input'
        - $ref: '#/components/parameters/signature'
    parameters:
      - $ref: '#/components/parameters/id'
  '/outgoing-payments/{id}':
    get:
      summary: Get an Outgoing Payment
      tags:
        - outgoing-payment
      operationId: get-outgoing-payment
      responses:
        '200':
          description: Outgoing Payment Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/outgoing-payment'
              examples:
                Outgoing Payment with a fixed send amount of $25:
                  value:
                    id: 'https://openpayments.guide/bob/outgoing-payments/3859b39e-4666-4ce5-8745-72f1864c5371'
                    paymentPointer: 'https://openpayments.guide/bob/'
                    failed: false
                    receiver: 'https://openpayments.guide/alice/incoming-payments/2f1b0150-db73-49e8-8713-628baa4a17ff'
                    sendAmount:
                      value: '2500'
                      assetCode: USD
                      assetScale: 2
                    receiveAmount:
                      value: '2198'
                      assetCode: EUR
                      assetScale: 2
                    sentAmount:
                      value: '1205'
                      assetCode: USD
                      assetScale: 2
                    createdAt: '2022-03-12T23:20:50.52Z'
                    updatedAt: '2022-04-01T10:24:36.11Z'
                    description: Thanks for the flowers!
                    externalRef: INV-12876
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          description: Outgoing Payment Not Found
      description: A client can fetch the latest state of an outgoing payment.
      parameters:
        - $ref: '#/components/parameters/signature-input'
        - $ref: '#/components/parameters/signature'
    parameters:
      - $ref: '#/components/parameters/id'
  '/quotes/{id}':
    get:
      summary: Get a Quote
      tags:
        - quote
      operationId: get-quote
      responses:
        '200':
          description: Quote Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/quote'
              examples:
                Quote with a fixed send amount of $25:
                  value:
                    id: 'https://openpayments.guide/bob/quotes/3859b39e-4666-4ce5-8745-72f1864c5371'
                    paymentPointer: 'https://openpayments.guide/bob/'
                    receiver: 'https://openpayments.guide/alice/incoming-payments/2f1b0150-db73-49e8-8713-628baa4a17ff'
                    sendAmount:
                      value: '2500'
                      assetCode: USD
                      assetScale: 2
                    receiveAmount:
                      value: '2198'
                      assetCode: EUR
                      assetScale: 2
                    createdAt: '2022-03-12T23:20:50.52Z'
                    expiresAt: '2022-04-12T23:20:50.52Z'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          description: Quote Not Found
      description: A client can fetch the latest state of a quote.
      parameters:
        - $ref: '#/components/parameters/signature-input'
        - $ref: '#/components/parameters/signature'
    parameters:
      - $ref: '#/components/parameters/id'
components:
  schemas:
    payment-pointer:
      title: Payment Pointer
      type: object
      description: A **payment pointer** resource is the root of the API and contains the public details of the financial account represented by the Payment Pointer that is also the service endpoint URL.
      additionalProperties: false
      examples:
        - id: 'https://openpayments.guide/alice'
          publicName: Alice
          assetCode: USD
          assetScale: 2
          authServer: 'https://openpayments.guide/auth'
      properties:
        id:
          type: string
          format: uri
          description: The URL identifying the payment pointer.
          readOnly: true
        publicName:
          type: string
          description: A public name for the account. This should be set by the account holder with their provider to provide a hint to counterparties as to the identity of the account holder.
          readOnly: true
        assetCode:
          $ref: ./schemas.yaml#/components/schemas/assetCode
        assetScale:
          $ref: ./schemas.yaml#/components/schemas/assetScale
        authServer:
          type: string
          format: uri
          description: The URL of the authorization server endpoint for getting grants and access tokens for this payment pointer.
          readOnly: true
      required:
        - id
        - assetCode
        - assetScale
        - authServer
    json-web-key-set:
      title: JSON Web Key Set document
      type: object
      description: 'A JSON Web Key Set document according to [rfc7517](https://datatracker.ietf.org/doc/html/rfc7517) listing the keys associated with this payment pointer. These keys are used to sign requests made by this payment pointer.'
      additionalProperties: false
      properties:
        keys:
          type: array
          items:
            $ref: '#/components/schemas/json-web-key'
          readOnly: true
      required:
        - keys
      examples:
        - keys:
            - kid: key-1
              alg: EdDSA
              use: sig
              kty: OKP
              crv: Ed25519
              x: 11qYAYKxCrfVS_7TyWQHOg7hcvPapiMlrwIaaPcHURo
    ilp-stream-connection:
      title: ILP Stream Connection
      type: object
      description: An **ILP STREAM Connection** is an endpoint that returns unique STREAM connection credentials to establish a STREAM connection to the underlying account.
      additionalProperties: false
      examples:
        - id: 'https://openpayments.guide/connections/016da9d5-c9a4-4c80-a354-86b915a04ff8'
          ilpApddress: g.ilp.iwuyge987y.98y08y
          sharedSecret: 1c7eaXa4rd2fFOBl1iydvCT1tV5TbM3RW1WLCafu_JA
      properties:
        id:
          type: string
          format: uri
          description: The URL identifying the endpoint.
          readOnly: true
        ilpAddress:
          type: string
          maxLength: 1023
          pattern: '^(g|private|example|peer|self|test[1-3]?|local)([.][a-zA-Z0-9_~-]+)+$'
          description: The ILP address to use when establishing a STREAM connection.
          readOnly: true
        sharedSecret:
          type: string
          pattern: '^[a-zA-Z0-9-_]+$'
          description: The base64 url-encoded shared secret to use when establishing a STREAM connection.
          readOnly: true
        assetCode:
          $ref: ./schemas.yaml#/components/schemas/assetCode
        assetScale:
          $ref: ./schemas.yaml#/components/schemas/assetScale
      required:
        - id
        - ilpAddress
        - sharedSecret
        - assetCode
        - assetScale
    incoming-payment:
      title: Incoming Payment
      description: 'An **incoming payment** resource represents a payment that will be, is currently being, or has been received by the account.'
      type: object
      examples:
        - id: 'https://openpayments.guide/alice/incoming-payments/016da9d5-c9a4-4c80-a354-86b915a04ff8'
          paymentPointer: 'https://openpayments.guide/alice/'
          incomingAmount:
            value: '250'
            assetCode: USD
            assetScale: 2
          receivedAmount:
            value: '250'
            assetCode: USD
            assetScale: 2
          completed: true
          expiresAt: '2022-04-12T23:20:50.52Z'
          createdAt: '2022-03-12T23:20:50.52Z'
          updatedAt: '2022-04-01T10:24:36.11Z'
          description: 'Hi Mo, this is for the cappuccino I bought for you the other day.'
          externalRef: Coffee w/ Mo on 10 March 22
        - id: 'https://openpayments.guide/alice/incoming-payments/456da9d5-c9a4-4c80-a354-86b915a04ff8'
          paymentPointer: 'https://openpayments.guide/alice/'
          incomingAmount:
            value: '2500'
            assetCode: USD
            assetScale: 2
          receivedAmount:
            value: '0'
            assetCode: USD
            assetScale: 2
          expiresAt: '2022-04-12T23:20:50.52Z'
          createdAt: '2022-03-12T23:20:50.52Z'
          updatedAt: '2022-03-12T23:20:50.52Z'
      properties:
        id:
          type: string
          format: uri
          description: The URL identifying the incoming payment.
          readOnly: true
        paymentPointer:
          type: string
          format: uri
          description: The URL of the payment pointer this payment is being made into.
          readOnly: true
        completed:
          type: boolean
          description: Describes whether the incoming payment has completed receiving fund.
          default: false
        incomingAmount:
          description: The maximum amount that should be paid into the payment pointer under this incoming payment.
          $ref: ./schemas.yaml#/components/schemas/amount
        receivedAmount:
          description: The total amount that has been paid into the payment pointer under this incoming payment.
          $ref: ./schemas.yaml#/components/schemas/amount
        expiresAt:
          type: string
          description: The date and time when payments under this incoming payment will no longer be accepted.
          format: date-time
        description:
          type: string
          description: Human readable description of the incoming payment that will be visible to the account holder.
        externalRef:
          type: string
          description: A reference that can be used by external systems to reconcile this payment with their systems. E.g. An invoice number.
        createdAt:
          type: string
          format: date-time
          description: The date and time when the incoming payment was created.
        updatedAt:
          type: string
          format: date-time
          description: The date and time when the incoming payment was updated.
      required:
        - id
        - paymentPointer
        - completed
        - receivedAmount
        - createdAt
        - updatedAt
    incoming-payment-with-connection:
      title: Incoming Payment with Connection
      description: An **incoming payment** resource with the Interledger STREAM Connection to use to pay into the payment pointer under this incoming payment.
      type: object
      examples:
        - id: 'https://openpayments.guide/alice/incoming-payments/016da9d5-c9a4-4c80-a354-86b915a04ff8'
          paymentPointer: 'https://openpayments.guide/alice/'
          incomingAmount:
            value: '250'
            assetCode: USD
            assetScale: 2
          receivedAmount:
            value: '250'
            assetCode: USD
            assetScale: 2
          completed: true
          expiresAt: '2022-04-12T23:20:50.52Z'
          createdAt: '2022-03-12T23:20:50.52Z'
          updatedAt: '2022-04-01T10:24:36.11Z'
          description: 'Hi Mo, this is for the cappuccino I bought for you the other day.'
          externalRef: Coffee w/ Mo on 10 March 22
          ilpStreamConnection:
            id: 'https://openpayments.guide/connections/032da9d5-c9a4-4c80-a354-86b915a04ff8'
            ilpApddress: g.ilp.iwuyge987y.98y08y
            sharedSecret: 1c7eaXa4rd2fFOBl1iydvCT1tV5TbM3RW1WLCafu_JA
      allOf:
        - $ref: '#/components/schemas/incoming-payment'
        - type: object
          properties:
            ilpStreamConnection:
              $ref: '#/components/schemas/ilp-stream-connection'
      unevaluatedProperties: false
    incoming-payment-with-connection-url:
      title: Incoming Payment with Connection
      description: An **incoming payment** resource with the url for the Interledger STREAM Connection resource to use to pay into the payment pointer under this incoming payment.
      type: object
      examples:
        - id: 'https://openpayments.guide/alice/incoming-payments/456da9d5-c9a4-4c80-a354-86b915a04ff8'
          paymentPointer: 'https://openpayments.guide/alice/'
          incomingAmount:
            value: '2500'
            assetCode: USD
            assetScale: 2
          receivedAmount:
            value: '0'
            assetCode: USD
            assetScale: 2
          expiresAt: '2022-04-12T23:20:50.52Z'
          createdAt: '2022-03-12T23:20:50.52Z'
          updatedAt: '2022-03-12T23:20:50.52Z'
          ilpStreamConnection: 'https://openpayments.guide/connections/782da9d5-c9a4-4c80-a354-86b915a04ff8'
      allOf:
        - $ref: '#/components/schemas/incoming-payment'
        - type: object
          properties:
            ilpStreamConnection:
              type: string
              format: uri
              description: Endpoint that returns unique STREAM connection credentials to establish a STREAM connection to the underlying account.
              readOnly: true
      unevaluatedProperties: false
    outgoing-payment:
      title: Outgoing Payment
      description: 'An **outgoing payment** resource represents a payment that will be, is currently being, or has previously been, sent from the payment pointer.'
      type: object
      examples:
        - id: 'https://openpayments.guide/alice/outgoing-payments/8c68d3cc-0a0f-4216-98b4-4fa44a6c88cf'
          paymentPointer: 'https://openpayments.guide/alice/'
          failed: false
          receiver: 'https://openpayments.guide/aplusvideo/incoming-payments/45d495ad-b763-4882-88d7-aa14d261686e'
          receiveAmount:
            value: '2500'
            assetCode: USD
            assetScale: 2
          sendAmount:
            value: '2500'
            assetCode: USD
            assetScale: 2
          sentAmount:
            value: '2500'
            assetCode: USD
            assetScale: 2
          createdAt: '2022-03-12T23:20:50.52Z'
          updatedAt: '2022-04-01T10:24:36.11Z'
          description: APlusVideo subscription
          externalRef: 'customer: 847458475'
        - id: 'https://openpayments.guide/alice/outgoing-payments/0cffa5a4-58fd-4cc8-8e01-7145c72bf07c'
          paymentPointer: 'https://openpayments.guide/alice/'
          failed: false
          receiver: 'https://openpayments.guide/shoeshop/2fe92c6f-ef0d-487c-8759-3784eae6bce9'
          sendAmount:
            value: '7026'
            assetCode: USD
            assetScale: 2
          sentAmount:
            value: '7026'
            assetCode: USD
            assetScale: 2
          createdAt: '2022-03-12T23:20:50.52Z'
          updatedAt: '2022-04-01T10:24:36.11Z'
          description: Thank you for your purchase at ShoeShop!
          externalRef: INV2022-8943756
      properties:
        id:
          type: string
          format: uri
          description: The URL identifying the outgoing payment.
          readOnly: true
        paymentPointer:
          type: string
          format: uri
          description: The URL of the payment pointer from which this payment is sent.
          readOnly: true
        quoteId:
          type: string
          format: uri
          description: The URL of the quote defining this payment's amounts.
          readOnly: true
        failed:
          type: boolean
          description: Describes whether the payment failed to send its full amount.
          default: false
        receiver:
          description: The URL of the incoming payment or ILP STREAM Connection that is being paid.
          $ref: ./schemas.yaml#/components/schemas/receiver
        receiveAmount:
          description: The total amount that should be received by the receiver when this outgoing payment has been paid.
          $ref: ./schemas.yaml#/components/schemas/amount
        sendAmount:
          description: The total amount that should be sent when this outgoing payment has been paid.
          $ref: ./schemas.yaml#/components/schemas/amount
        sentAmount:
          description: The total amount that has been sent under this outgoing payment.
          $ref: ./schemas.yaml#/components/schemas/amount
        description:
          type: string
          description: Human readable description of the outgoing payment that will be visible to the account holder and shared with the receiver.
        externalRef:
          type: string
          description: A reference that can be used by external systems to reconcile this payment with their systems. E.g. An invoice number. (Optional)
        createdAt:
          type: string
          format: date-time
          description: The date and time when the outgoing payment was created.
        updatedAt:
          type: string
          format: date-time
          description: The date and time when the outgoing payment was updated.
      required:
        - id
        - paymentPointer
        - receiver
        - sendAmount
        - receiveAmount
        - sentAmount
        - createdAt
        - updatedAt
      additionalProperties: false
    quote:
      title: Quote
      description: A **quote** resource represents the quoted amount details with which an Outgoing Payment may be created.
      type: object
      examples:
        - id: 'https://openpayments.guide/alice/quotes/ab03296b-0c8b-4776-b94e-7ee27d868d4d'
          paymentPointer: 'https://openpayments.guide/alice/'
          receiver: 'https://openpayments.guide/shoeshop/incoming-payments/2fe92c6f-ef0d-487c-8759-3784eae6bce9'
          receiveAmount:
            value: '2500'
            assetCode: USD
            assetScale: 2
          sendAmount:
            value: '2500'
            assetCode: USD
            assetScale: 2
          createdAt: '2022-03-12T23:20:50.52Z'
          expiresAt: '2022-04-12T23:20:50.52Z'
        - id: 'https://openpayments.guide/alice/quotes/8c68d3cc-0a0f-4216-98b4-4fa44a6c88cf'
          paymentPointer: 'https://openpayments.guide/alice/'
          receiver: 'https://openpayments.guide/aplusvideo/incoming-payments/45d495ad-b763-4882-88d7-aa14d261686e'
          sendAmount:
            value: '2500'
            assetCode: USD
            assetScale: 2
          receiveAmount:
            value: '2198'
            assetCode: EUR
            assetScale: 2
          createdAt: '2022-03-12T23:20:50.52Z'
          expiresAt: '2022-04-12T23:20:50.52Z'
      additionalProperties: false
      properties:
        id:
          type: string
          format: uri
          description: The URL identifying the quote.
          readOnly: true
        paymentPointer:
          type: string
          format: uri
          description: The URL of the payment pointer from which this quote's payment would be sent.
          readOnly: true
        receiver:
          $ref: ./schemas.yaml#/components/schemas/receiver
        receiveAmount:
          $ref: ./schemas.yaml#/components/schemas/amount
        sendAmount:
          $ref: ./schemas.yaml#/components/schemas/amount
        expiresAt:
          type: string
          description: The date and time when the calculated `sendAmount` is no longer valid.
          readOnly: true
        createdAt:
          type: string
          format: date-time
          description: The date and time when the quote was created.
      required:
        - id
        - paymentPointer
        - receiver
        - receiveAmount
        - sendAmount
        - createdAt
    page-info:
      description: ''
      type: object
      examples:
        - startCursor: 241de237-f989-42be-926d-c0c1fca57708
          endCursor: 315581f8-9967-45a0-9cd3-87b60b6d6414
          hasNextPage: true
          hasPreviousPage: true
      properties:
        startCursor:
          type: string
          minLength: 1
          description: Cursor corresponding to the first element in the result array.
        endCursor:
          type: string
          minLength: 1
          description: Cursor corresponding to the last element in the result array.
        hasNextPage:
          type: boolean
          description: Describes whether the data set has further entries.
        hasPreviousPage:
          type: boolean
          description: Describes whether the data set has previous entries.
      required:
        - startCursor
        - endCursor
        - hasNextPage
        - hasPreviousPage
      additionalProperties: false
    json-web-key:
      type: object
      properties:
        kid:
          type: string
        alg:
          type: string
          description: 'The cryptographic algorithm family used with the key. The only allowed value is `EdDSA`. '
          enum:
            - EdDSA
        use:
          type: string
          enum:
            - sig
        kty:
          type: string
          enum:
            - OKP
        crv:
          type: string
          enum:
            - Ed25519
        x:
          type: string
          pattern: '^[a-zA-Z0-9-_]+$'
          description: The base64 url-encoded public key.
      required:
        - kid
        - alg
        - kty
        - crv
        - x
      title: Ed25519 Public Key
      description: A JWK representation of an Ed25519 Public Key
      examples:
        - kid: key-1
          use: sig
          kty: OKP
          crv: Ed25519
          x: 11qYAYKxCrfVS_7TyWQHOg7hcvPapiMlrwIaaPcHURo
        - kid: '2022-09-02'
          use: sig
          kty: OKP
          crv: Ed25519
          x: oy0L_vTygNE4IogRyn_F5GmHXdqYVjIXkWs2jky7zsI
  securitySchemes:
    GNAP:
      name: Authorization
      type: apiKey
      in: header
      description: |-
        The API uses the Grant Negotiation and Authorization Protocol for authorization. An access token must be acquired from an authorization server before accessing the API and then provided in the request headers using the prefix `GNAP`.

        All requests must also be signed using a client key over some select headers and a digest of the request body.
  responses:
    '401':
      description: Authorization required
      headers:
        WWW-Authenticate:
          schema:
            type: string
          description: The address of the authorization server for grant requests in the format `GNAP as_uri=<URI>`
    '403':
      description: Forbidden
  parameters:
    cursor:
      schema:
        type: string
        minLength: 1
      name: cursor
      in: query
      description: The cursor key to list from.
    first:
      schema:
        type: integer
        minimum: 1
      name: first
      in: query
      description: The number of items to return after the cursor.
    last:
      schema:
        type: integer
        minimum: 1
      name: last
      in: query
      description: The number of items to return before the cursor.
    id:
      name: id
      in: path
      schema:
        type: string
      description: Sub-resource identifier
      required: true
    signature:
      name: Signature
      in: header
      schema:
        type: string
        example: 'Signature: sig1=:EWJgAONk3D6542Scj8g51rYeMHw96cH2XiCMxcyL511wyemGcw==:'
      description: 'The signature generated based on the Signature-Input, using the signing algorithm specified in the "alg" field of the JWK.'
      required: true
    signature-input:
      name: Signature-Input
      in: header
      schema:
        type: string
        example: 'Signature-Input: sig1=("@method" "@target-uri" "content-digest" "content-length" "content-type");created=1618884473;keyid="gnap-rsa"'
      description: 'The Signature-Input field is a Dictionary structured field containing the metadata for one or more message signatures generated from components within the HTTP message.  Each member describes a single message signature.  The member''s key is the label that uniquely identifies the message signature within the context of the HTTP message.  The member''s value is the serialization of the covered components Inner List plus all signature metadata parameters identified by the label.  The following components MUST be included: - "@method" - "@target-uri" - "authorization".  When the message contains a request body, the covered components MUST also include the following: - "content-digest"  The keyid parameter of the signature MUST be set to the kid value of the JWK.      See [ietf-httpbis-message-signatures](https://datatracker.ietf.org/doc/html/draft-ietf-httpbis-message-signatures#section-4.1) for more details.'
      required: true
security:
  - GNAP: []
