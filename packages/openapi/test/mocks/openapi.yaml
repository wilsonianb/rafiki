openapi: 3.1.0
info:
  title: Open Payments
  version: '1.0'
  license:
    name: Apache 2.0
    identifier: Apache-2.0
  description: |-
    The Open Payments API is a simple REST API with 5 resource types: **payment pointer**, **quote**, **connection**, **incoming payment** and **outgoing payment**.

    The *service endpoint* for the API is always the URL of the payment pointer resource and all other resources (except connections) are sub-resources of the payment pointer.

    An incoming payment defines meta data that is automatically attached to payments made into the payment pointer under that incoming payment. This facilitates automation of processes like reconciliation of payment into the payment pointer with external systems.

    An outgoing payment is an instruction to make a payment out of the payment pointer.

    A quote is a commitment from the account provider to deliver a particular amount to a receiver when sending a particular amount from the payment pointer. It is only valid for a limited time.

    For privacy reasons a connection resource is not a sub-resource of a payment pointer.

    All resource and collection resource representations use JSON and the media-type `application/json`.  

    The `payment pointer` resource has three collections of sub-resources:
    1. `/incoming-payments` contains the **incoming payment** sub-resources  

    There is no normative path for **connection** resources. In this documentation we use the path `/connections` but implementations may use any arbitrary path.

    Access to resources and permission to execute the methods exposed by the API is determined by the grants given to the client represented by an access token used in API requests.
  summary: An API for open access to financial accounts to send and receive payments.
  contact:
    email: tech@interledger.org
servers:
  - url: '{paymentPointer}'
    description: 'Server for when Payment Pointer has a pathname  (ie https://openpayments.guide/alice)'
    variables:
      paymentPointer:
        default: openpayments.guide/alice
  - url: '{paymentPointer}/.well-known/pay'
    description: 'Server for when Payment Pointer has no pathname (ie https://openpayments.guide)'
    variables:
      paymentPointer:
        default: openpayments.guide
tags:
  - name: incoming-payment
    description: incoming payment operations
paths:
  /{accountId}/incoming-payments:
    post:
      summary: Create an Incoming Payment
      tags:
        - incoming-payment
      operationId: create-incoming-payment
      responses:
        '201':
          description: Incoming Payment Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/incoming-payment-with-connection'
              examples:
                New Incoming Payment for $25:
                  value:
                    id: 'https://openpayments.guide/alice/incoming-payments/08394f02-7b7b-45e2-b645-51d04e7c330c'
                    paymentPointer: 'https://openpayments.guide/alice/'
                    incomingAmount:
                      value: '2500'
                      assetCode: USD
                      assetScale: 2
                    receivedAmount:
                      value: '0'
                      assetCode: USD
                      assetScale: 2
                    completed: false
                    expiresAt: '2022-02-03T23:20:50.52Z'
                    externalRef: INV2022-02-0137
                    ilpStreamConnection:
                      id: 'https://openpayments.guide/connections/ff394f02-7b7b-45e2-b645-51d04e7c345c'
                      ilpAddress: g.ilp.iwuyge987y.98y08y
                      sharedSecret: 1c7eaXa4rd2fFOBl1iydvCT1tV5TbM3RW1WLCafu_JA
                      assetCode: USD
                      assetScale: 2
                    createdAt: '2022-03-12T23:20:50.52Z'
                    updatedAt: '2022-04-01T10:24:36.11Z'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                incomingAmount:
                  description: The maximum amount that should be paid into the payment pointer under this incoming payment.
                  $ref: ./schemas.yaml#/components/schemas/amount
                expiresAt:
                  type: string
                  description: The date and time when payments into the incoming payment must no longer be accepted.
                  format: date-time
                  writeOnly: true
                description:
                  type: string
                  description: Human readable description of the incoming payment that will be visible to the account holder.
                externalRef:
                  type: string
                  description: A reference that can be used by external systems to reconcile this payment with their systems. E.g. An invoice number. (Optional)
              additionalProperties: false
            examples:
              Create incoming payment for $25 to pay invoice INV2022-02-0137:
                value:
                  incomingAmount:
                    value: '2500'
                    assetCode: USD
                    assetScale: 2
                  externalRef: INV2022-02-0137
        description: |-
          A subset of the incoming payments schema is accepted as input to create a new incoming payment.

          The `incomingAmount` must use the same `assetCode` and `assetScale` as the payment pointer.
        required: true
      description: |-
        A client MUST create an **incoming payment** resource before it is possible to send any payments to the payment pointer.

        All of the input parameters are _optional_.
      parameters:
        - $ref: '#/components/parameters/account-id'
        - $ref: '#/components/parameters/signature'
    get:
      summary: List Incoming Payments
      operationId: list-incoming-payments
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  pagination:
                    $ref: '#/components/schemas/page-info'
                  result:
                    type: array
                    items:
                      $ref: '#/components/schemas/incoming-payment-with-connection-url'
              examples:
                forward pagination:
                  value:
                    pagination:
                      startCursor: 241de237-f989-42be-926d-c0c1fca57708
                      endCursor: 315581f8-9967-45a0-9cd3-87b60b6d6414
                      hasPreviousPage: false
                      hasNextPage: true
                    result:
                      - id: 'https://openpayments.guide/alice/incoming-payments/016da9d5-c9a4-4c80-a354-86b915a04ff8'
                        paymentPointer: 'https://openpayments.guide/alice/'
                        incomingAmount:
                          value: '250'
                          assetCode: USD
                          assetScale: 2
                        receivedAmount:
                          value: '250'
                          assetCode: USD
                          assetScale: 2
                        ilpStreamConnection: 'https://openpayments.guide/connections/376df9d5-c9a4-4c80-a354-86b915a04ff8'
                        expiresAt: '2022-04-12T23:20:50.52Z'
                        createdAt: '2022-03-12T23:20:50.52Z'
                        updatedAt: '2022-04-01T10:24:36.11Z'
                        description: 'Hi Mo, this is for the cappuccino I bought for you the other day.'
                        externalRef: Coffee w/ Mo on 10 March 22
                        completed: true
                      - id: 'https://openpayments.guide/alice/incoming-payments/32abc219-3dc3-44ec-a225-790cacfca8fa'
                        paymentPointer: 'https://openpayments.guide/alice/'
                        receivedAmount:
                          value: '100'
                          assetCode: USD
                          assetScale: 2
                        ilpStreamConnection: 'https://openpayments.guide/connections/1f6df9d5-c9a4-4c80-a354-86b915a04ff8'
                        expiresAt: '2022-04-12T23:20:50.52Z'
                        createdAt: '2022-03-12T23:20:50.52Z'
                        updatedAt: '2022-04-01T10:24:36.11Z'
                        description: 'I love your website, Alice! Thanks for the great content'
                        completed: false
                backward pagination:
                  value:
                    pagination:
                      startCursor: 241de237-f989-42be-926d-c0c1fca57708
                      endCursor: 315581f8-9967-45a0-9cd3-87b60b6d6414
                      hasPreviousPage: true
                      hasNextPage: false
                    result:
                      - id: 'https://openpayments.guide/alice/incoming-payments/32abc219-3dc3-44ec-a225-790cacfca8fa'
                        paymentPointer: 'https://openpayments.guide/alice/'
                        receivedAmount:
                          value: '100'
                          assetCode: USD
                          assetScale: 2
                        completed: true
                        ilpStreamConnection: 'https://openpayments.guide/connections/1f6df9d5-c9a4-4c80-a354-86b915a04ff8'
                        expiresAt: '2022-04-12T23:20:50.52Z'
                        createdAt: '2022-03-12T23:20:50.52Z'
                        updatedAt: '2022-04-01T10:24:36.11Z'
                        description: 'I love your website, Alice! Thanks for the great content'
                      - id: 'https://openpayments.guide/alice/incoming-payments/016da9d5-c9a4-4c80-a354-86b915a04ff8'
                        paymentPointer: 'https://openpayments.guide/alice/'
                        incomingAmount:
                          value: '250'
                          assetCode: USD
                          assetScale: 2
                        receivedAmount:
                          value: '250'
                          assetCode: USD
                          assetScale: 2
                        completed: true
                        ilpStreamConnection: 'https://openpayments.guide/connections/376df9d5-c9a4-4c80-a354-86b915a04ff8'
                        expiresAt: '2022-04-12T23:20:50.52Z'
                        createdAt: '2022-03-12T23:20:50.52Z'
                        updatedAt: '2022-04-01T10:24:36.11Z'
                        description: 'Hi Mo, this is for the cappuccino I bought for you the other day.'
                        externalRef: Coffee w/ Mo on 10 March 22
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
      description: List all incoming payments on the payment pointer
      parameters:
        - $ref: '#/components/parameters/account-id'
        - $ref: '#/components/parameters/pagination'
        - $ref: '#/components/parameters/signature'
      tags:
        - incoming-payment
components:
  schemas:
    ilp-stream-connection:
      title: ILP Stream Connection
      type: object
      description: An **ILP STREAM Connection** is an endpoint that returns unique STREAM connection credentials to establish a STREAM connection to the underlying account.
      additionalProperties: false
      examples:
        - id: 'https://openpayments.guide/connections/016da9d5-c9a4-4c80-a354-86b915a04ff8'
          ilpApddress: g.ilp.iwuyge987y.98y08y
          sharedSecret: 1c7eaXa4rd2fFOBl1iydvCT1tV5TbM3RW1WLCafu_JA
      properties:
        id:
          type: string
          format: uri
          description: The URL identifying the endpoint.
          readOnly: true
        ilpAddress:
          type: string
          maxLength: 1023
          pattern: '^(g|private|example|peer|self|test[1-3]?|local)([.][a-zA-Z0-9_~-]+)+$'
          description: The ILP address to use when establishing a STREAM connection.
          readOnly: true
        sharedSecret:
          type: string
          pattern: '^[a-zA-Z0-9-_]+$'
          description: The base64 url-encoded shared secret to use when establishing a STREAM connection.
          readOnly: true
        assetCode:
          $ref: ./schemas.yaml#/components/schemas/assetCode
        assetScale:
          $ref: ./schemas.yaml#/components/schemas/assetScale
      required:
        - id
        - ilpAddress
        - sharedSecret
        - assetCode
        - assetScale
    incoming-payment:
      title: Incoming Payment
      description: 'An **incoming payment** resource represents a payment that will be, is currently being, or has been received by the account.'
      type: object
      examples:
        - id: 'https://openpayments.guide/alice/incoming-payments/016da9d5-c9a4-4c80-a354-86b915a04ff8'
          paymentPointer: 'https://openpayments.guide/alice/'
          incomingAmount:
            value: '250'
            assetCode: USD
            assetScale: 2
          receivedAmount:
            value: '250'
            assetCode: USD
            assetScale: 2
          completed: true
          expiresAt: '2022-04-12T23:20:50.52Z'
          createdAt: '2022-03-12T23:20:50.52Z'
          updatedAt: '2022-04-01T10:24:36.11Z'
          description: 'Hi Mo, this is for the cappuccino I bought for you the other day.'
          externalRef: Coffee w/ Mo on 10 March 22
        - id: 'https://openpayments.guide/alice/incoming-payments/456da9d5-c9a4-4c80-a354-86b915a04ff8'
          paymentPointer: 'https://openpayments.guide/alice/'
          incomingAmount:
            value: '2500'
            assetCode: USD
            assetScale: 2
          receivedAmount:
            value: '0'
            assetCode: USD
            assetScale: 2
          expiresAt: '2022-04-12T23:20:50.52Z'
          createdAt: '2022-03-12T23:20:50.52Z'
          updatedAt: '2022-03-12T23:20:50.52Z'
      properties:
        id:
          type: string
          format: uri
          description: The URL identifying the incoming payment.
          readOnly: true
        paymentPointer:
          type: string
          format: uri
          description: The URL of the payment pointer this payment is being made into.
          readOnly: true
        completed:
          type: boolean
          description: Describes whether the incoming payment has completed receiving fund.
          default: false
        incomingAmount:
          description: The maximum amount that should be paid into the payment pointer under this incoming payment.
          $ref: ./schemas.yaml#/components/schemas/amount
        receivedAmount:
          description: The total amount that has been paid into the payment pointer under this incoming payment.
          $ref: ./schemas.yaml#/components/schemas/amount
        expiresAt:
          type: string
          description: The date and time when payments under this incoming payment will no longer be accepted.
          format: date-time
        description:
          type: string
          description: Human readable description of the incoming payment that will be visible to the account holder.
        externalRef:
          type: string
          description: A reference that can be used by external systems to reconcile this payment with their systems. E.g. An invoice number.
        createdAt:
          type: string
          format: date-time
          description: The date and time when the incoming payment was created.
        updatedAt:
          type: string
          format: date-time
          description: The date and time when the incoming payment was updated.
      required:
        - id
        - paymentPointer
        - completed
        - receivedAmount
        - createdAt
        - updatedAt
      additionalProperties: false
    incoming-payment-with-connection:
      title: Incoming Payment with Connection
      description: An **incoming payment** resource with the Interledger STREAM Connection to use to pay into the payment pointer under this incoming payment.
      type: object
      examples:
        - id: 'https://openpayments.guide/alice/incoming-payments/016da9d5-c9a4-4c80-a354-86b915a04ff8'
          paymentPointer: 'https://openpayments.guide/alice/'
          incomingAmount:
            value: '250'
            assetCode: USD
            assetScale: 2
          receivedAmount:
            value: '250'
            assetCode: USD
            assetScale: 2
          completed: true
          expiresAt: '2022-04-12T23:20:50.52Z'
          createdAt: '2022-03-12T23:20:50.52Z'
          updatedAt: '2022-04-01T10:24:36.11Z'
          description: 'Hi Mo, this is for the cappuccino I bought for you the other day.'
          externalRef: Coffee w/ Mo on 10 March 22
          ilpStreamConnection:
            id: 'https://openpayments.guide/connections/032da9d5-c9a4-4c80-a354-86b915a04ff8'
            ilpApddress: g.ilp.iwuyge987y.98y08y
            sharedSecret: 1c7eaXa4rd2fFOBl1iydvCT1tV5TbM3RW1WLCafu_JA
      allOf:
        - $ref: '#/components/schemas/incoming-payment'
        - type: object
          properties:
            ilpStreamConnection:
              $ref: '#/components/schemas/ilp-stream-connection'
      unevaluatedProperties: false
    incoming-payment-with-connection-url:
      title: Incoming Payment with Connection
      description: An **incoming payment** resource with the url for the Interledger STREAM Connection resource to use to pay into the payment pointer under this incoming payment.
      type: object
      examples:
        - id: 'https://openpayments.guide/alice/incoming-payments/456da9d5-c9a4-4c80-a354-86b915a04ff8'
          paymentPointer: 'https://openpayments.guide/alice/'
          incomingAmount:
            value: '2500'
            assetCode: USD
            assetScale: 2
          receivedAmount:
            value: '0'
            assetCode: USD
            assetScale: 2
          expiresAt: '2022-04-12T23:20:50.52Z'
          createdAt: '2022-03-12T23:20:50.52Z'
          updatedAt: '2022-03-12T23:20:50.52Z'
          ilpStreamConnection: 'https://openpayments.guide/connections/782da9d5-c9a4-4c80-a354-86b915a04ff8'
      allOf:
        - $ref: '#/components/schemas/incoming-payment'
        - type: object
          properties:
            ilpStreamConnection:
              type: string
              format: uri
              description: Endpoint that returns unique STREAM connection credentials to establish a STREAM connection to the underlying account.
              readOnly: true
      unevaluatedProperties: false
    pagination:
      description: Pagination parameters
      oneOf:
        - $ref: '#/components/schemas/forward-pagination'
        - $ref: '#/components/schemas/backward-pagination'
    forward-pagination:
      description: Forward pagination parameters
      type: object
      examples:
        - first: 10
          cursor: 315581f8-9967-45a0-9cd3-87b60b6d6414
      additionalProperties: false
      properties:
        first:
          type: integer
          minimum: 1
          description: The number of items to return.
        cursor:
          type: string
          minLength: 1
          description: The cursor key to list from.
    backward-pagination:
      description: Backward pagination parameters
      type: object
      examples:
        - last: 10
          cursor: 315581f8-9967-45a0-9cd3-87b60b6d6414
      properties:
        last:
          type: integer
          minimum: 1
          description: The number of items to return.
        cursor:
          type: string
          minLength: 1
          description: The cursor key to list from.
      required:
        - cursor
      additionalProperties: false
    page-info:
      description: ''
      type: object
      examples:
        - startCursor: 241de237-f989-42be-926d-c0c1fca57708
          endCursor: 315581f8-9967-45a0-9cd3-87b60b6d6414
          hasNextPage: true
          hasPreviousPage: true
      properties:
        startCursor:
          type: string
          minLength: 1
          description: Cursor corresponding to the first element in the result array.
        endCursor:
          type: string
          minLength: 1
          description: Cursor corresponding to the last element in the result array.
        hasNextPage:
          type: boolean
          description: Describes whether the data set has further entries.
        hasPreviousPage:
          type: boolean
          description: Describes whether the data set has previous entries.
      required:
        - startCursor
        - endCursor
        - hasNextPage
        - hasPreviousPage
      additionalProperties: false
  securitySchemes:
    GNAP:
      name: Authorization
      type: apiKey
      in: header
      description: |-
        The API uses the Grant Negotiation and Authorization Protocol for authorization. An access token must be acquired from an authorization server before accessing the API and then provided in the request headers using the prefix `GNAP`.

        All requests must also be signed using a client key over some select headers and a digest of the request body.
  responses:
    '401':
      description: Authorization required
      headers:
        WWW-Authenticate:
          schema:
            type: string
          description: The address of the authorization server for grant requests in the format `GNAP as_uri=<URI>`
    '403':
      description: Forbidden
  parameters:
    account-id:
      schema:
        type: string
      name: accountId
      in: path
      required: true
      description: Account identifier
    pagination:
      schema:
        $ref: '#/components/schemas/pagination'
      in: query
      name: pagination
      description: Pagination parameters
      style: form
    id:
      name: id
      in: path
      schema:
        type: string
      description: Sub-resource identifier
      required: true
    signature:
      name: Signature
      in: header
      schema:
        type: string
        example: 'Signature: sig1=:EWJgAONk3D6542Scj8g51rYeMHw96cH2XiCMxcyL511wyemGcw==:'
      description: 'The signature generated based on the Signature-Input, using the signing algorithm specified in the "alg" field of the JWK.'
      required: true
security:
  - GNAP: []
