version: '3'
services:
  database:
    image: 'postgres' # use latest official postgres version
    restart: unless-stopped
    networks:
      rafiki:
    volumes:
      - database-data:/var/lib/postgresql/data/ # persist data even if container shuts down
      - ./dbinit.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - '5432:5432'
    environment:
      POSTGRES_PASSWORD: password
      POSTGRES_USER: postgres
  tigerbeetle:
    image: ghcr.io/tigerbeetledb/tigerbeetle@sha256:ea026bec8d80e56109b7dca636d70153ebdf4875d56e4f8783aa1500872527a2
    restart: unless-stopped
    privileged: true
    volumes:
      - tigerbeetle-data:/var/lib/tigerbeetle
    networks:
      rafiki:
        ipv4_address: 10.5.0.50
    entrypoint:
      - /bin/sh
      - -c
      - |
        set -ex
        DATA_FILE=/var/lib/tigerbeetle/cluster_0000000000_replica_000.tigerbeetle
        set +e
        ls $$DATA_FILE
        DATA_FILE_EXISTS="$$?"
        set -e
        echo $$DATA_FILE_EXISTS
        if [ "$$DATA_FILE_EXISTS" != 0 ]; then 
          /opt/beta-beetle/tigerbeetle init --cluster=0 --replica=0 --directory=/var/lib/tigerbeetle; 
        fi
        hostname -I
        ls /var/lib/tigerbeetle
        DATA_FILE=/var/lib/tigerbeetle/cluster_0000000000_replica_000.tigerbeetle
        /opt/beta-beetle/tigerbeetle start --cluster="0" --replica="0" --directory=/var/lib/tigerbeetle --addresses=0.0.0.0:4342
  redis:
    image: 'redis:7'
    restart: unless-stopped
    networks:
      rafiki:
volumes:
  database-data: # named volumes can be managed easier using docker-compose
  tigerbeetle-data: # named volumes can be managed easier using docker-compose

networks:
  rafiki:
    driver: bridge
    ipam:
      config:
        - subnet: 10.5.0.0/24
          gateway: 10.5.0.1
